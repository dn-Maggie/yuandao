<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dongnao.workbench.account.dao.AccountFlowMapper">
	<resultMap id="BaseResultMap" type="com.dongnao.workbench.account.model.AccountFlow">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="account_id" property="accountId" jdbcType="VARCHAR" />
		<result column="account_no" property="accountNo" jdbcType="VARCHAR" />
		<result column="account_type" property="accountType" jdbcType="INTEGER" />
		<result column="account_name" property="accountName" jdbcType="VARCHAR" />
		<result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
		<result column="money" property="money" jdbcType="DOUBLE" />
		<result column="note" property="note" jdbcType="VARCHAR" />
		<result column="is_account" property="isAccount" jdbcType="INTEGER" />
		<result column="stu_id" property="stuId" jdbcType="VARCHAR" />
		<result column="emp_id" property="empId" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap id="MoneyResultMap" type="com.dongnao.workbench.common.bean.ResultMoney">
		<result column="lend" property="lend"/>
		<result column="loan" property="loan"/>
		<result column="total" property="total"/>
	</resultMap>
	<resultMap id="FsResultMap" type="com.dongnao.workbench.account.model.FinStatements">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="subname" property="j_subject" jdbcType="VARCHAR" />
		<result column="classType" property="classType" jdbcType="VARCHAR" />
		<result column="j_year" property="j_year" jdbcType="VARCHAR" />
		<result column="j_jan" property="jan" jdbcType="VARCHAR" />
		<result column="j_feb" property="feb" jdbcType="VARCHAR" />
		<result column="j_mar" property="mar" jdbcType="VARCHAR" />
		<result column="j_apr" property="apr" jdbcType="VARCHAR" />
		<result column="j_may" property="may" jdbcType="VARCHAR" />
		<result column="j_jun" property="jun" jdbcType="VARCHAR" />
		<result column="j_jul" property="jul" jdbcType="VARCHAR" />
		<result column="j_aug" property="aug" jdbcType="VARCHAR" />
		<result column="j_sep" property="sep" jdbcType="VARCHAR" />
		<result column="j_oct" property="oct" jdbcType="VARCHAR" />
		<result column="j_nov" property="nov" jdbcType="VARCHAR" />
		<result column="j_dec" property="dec" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap id="ThirtyDayResultMap" type="com.dongnao.workbench.school.model.RecentlyThirtyDayData">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="date" property="date" jdbcType="VARCHAR" />
		<result column="money" property="money" jdbcType="DOUBLE" />
	</resultMap>
	
	<resultMap id="ThreeMonthResultMap" type="com.dongnao.workbench.school.model.RecentlyThreeMonthData">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="yearMonth" property="yearMonth" jdbcType="VARCHAR" />
		<result column="date" property="yearMonthDay" jdbcType="VARCHAR" />
		<result column="money" property="money" jdbcType="DOUBLE" />
	</resultMap>
	
	<sql id="Base_Column_List">
			 	id
				,account_id
				,account_no
				,account_type
				,account_name
				,create_date
				,money
				,note
				,is_account
				,stu_id
				,emp_id
	</sql>
	
	<select id="getByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from account_flow
		where id = #{id,jdbcType=VARCHAR}
	</select>
	
	<!--财务报表总业绩/总成本详情查询-->
	<select id="reportlistByzyj" resultMap="FsResultMap" parameterType="com.dongnao.workbench.common.bean.ReportQuerycondition">
		SELECT id,j_jan,j_feb,j_mar,j_apr,j_may,j_jun,j_jul,j_aug,j_sep,j_oct,j_nov,j_dec,subname,classtype,j_year
		 from cost_profit_temporary where subname=#{deptname,jdbcType=VARCHAR} and classType=#{classtype,jdbcType=VARCHAR} and j_year=#{year,jdbcType=VARCHAR}	
	</select>
	

	
	<select id="listByCondition" resultMap="BaseResultMap" parameterType="com.dongnao.workbench.account.model.AccountFlow">
		SELECT
			af.id,
			af.account_id,
			af.account_no,
			af.account_type,
			af.account_name,
			af.create_date,
			af.money,
			(
				CASE
				WHEN af.stu_id IS NOT NULL THEN
					CONCAT(v.NAME,"-",v.subject_name,"-",af.note)
				WHEN af.emp_id IS NOT NULL THEN
					CONCAT(bo.org_name,"-",e.nick_name,"-",af.note)
				ELSE
					af.note
				END
			) AS note,
			af.is_account,
			af.stu_id,
			v. NAME AS stuName,
			v.subject_name AS subjectName,
			v.course_name AS courseName
		FROM
			account_flow AS af
		LEFT JOIN vip_student AS v ON af.stu_id = v.id
		LEFT JOIN employee e on af.emp_id = e.id 
		LEFT join basic_org bo on e.dept_no = bo.org_no
		WHERE 1 = 1
		<if test="id != null and '' != id">  
			and af.id = #{id,jdbcType=VARCHAR}
		</if>
		<if test="accountId != null and '' != accountId">  
			and af.account_id = #{accountId,jdbcType=VARCHAR}
		</if>
		<if test="accountNo != null and '' != accountNo">  
			and af.account_no = #{accountNo,jdbcType=VARCHAR}
		</if>
		<if test="accountType != null and '' != accountType">  
			and af.account_type = #{accountType,jdbcType=INTEGER}
		</if>
		<if test="accountName != null and '' != accountName">  
			and af.account_name like CONCAT('%',#{accountName,jdbcType=VARCHAR},'%')
		</if>
		<if test="accountNameInclude != null and '' != accountNameInclude">  
			and af.account_name in(SUBSTRING(#{accountNameInclude,jdbcType=VARCHAR} FROM 1 FOR 4),SUBSTRING(#{accountNameInclude,jdbcType=VARCHAR} FROM 6 FOR 4))
		</if>
		<if test="accountNameExcept != null and '' != accountNameExcept">  
			and af.account_name not in (#{accountNameExcept,jdbcType=VARCHAR},'学费退款','学费调减')
		</if>
		<if test="null != propsMap.startDate and propsMap.startDate != ''">
			<![CDATA[
			and DATE_FORMAT(af.create_date,'%Y-%m-%d') >= DATE_FORMAT(#{propsMap.startDate,jdbcType=TIMESTAMP},'%Y-%m-%d')
			]]>
		</if>
		<if test="null != propsMap.endDate and propsMap.endDate != ''">
			<![CDATA[
				and DATE_FORMAT(af.create_date,'%Y-%m-%d') <= DATE_FORMAT(#{propsMap.endDate,jdbcType=TIMESTAMP},'%Y-%m-%d')
			]]>
		</if>
		<if test="money != null and '' != money">  
			and af.money = #{money,jdbcType=DOUBLE}
		</if>
		<if test="subjectName != null and '' != subjectName">  
			and v.subject_name = #{subjectName,jdbcType=VARCHAR}
		</if>
		<if test="note != null and '' != note">  
			and note like CONCAT('%',#{note,jdbcType=VARCHAR},'%')
		</if>
		<if test="isAccount != null and '' != isAccount">  
			and af.is_account = #{isAccount,jdbcType=INTEGER}
		</if>
		<if test="orderFields != null and '' != orderFields">  
           	order by ${orderFields} ${order}
		</if>
	</select>
	
	<delete id="deleteByKey" parameterType="java.lang.String">
		delete from account_flow
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	
	<delete id="timedupdatecostprofitdelete" parameterType="com.dongnao.workbench.common.bean.ReportQuerycondition">
		delete from cost_profit_temporary
		where 1=1
		<if test="year != null and '' != year">  
			and j_year = #{year,jdbcType=VARCHAR}
		</if>
	</delete>
	
	<insert id="add" parameterType="com.dongnao.workbench.account.model.AccountFlow">
		insert into account_flow (
		<include refid="Base_Column_List" />
		)values (
										#{id,jdbcType=VARCHAR}
										,#{accountId,jdbcType=VARCHAR}
										,#{accountNo,jdbcType=VARCHAR}
										,#{accountType,jdbcType=INTEGER}
										,#{accountName,jdbcType=VARCHAR}
										,#{createDate,jdbcType=TIMESTAMP}
										,#{money,jdbcType=DOUBLE}
										,#{note,jdbcType=VARCHAR}
										,#{isAccount,jdbcType=INTEGER}
										,#{stuId,jdbcType=VARCHAR}
										,#{empId,jdbcType=VARCHAR}
									)
	</insert>
	
		<insert id="timedupdatecostprofitr" parameterType="java.util.List">
insert into cost_profit_temporary (j_jan,j_feb,j_mar,j_apr,j_may,j_jun,j_jul,j_aug,j_sep,j_oct,j_nov,j_dec,subname,classType,j_year)
values
 <foreach collection ="list" item="item" index= "index" separator =",">
((SELECT truncate(sum(af2.money),2) from financial_flow af2,vip_student vs1 
			where af2.ACCOUNT_NO IN ('XFSR','XFBK') and DATE_FORMAT(af2.create_date,'%Y-%m')=concat(#{item.year},'-01') and af2.stu_id=vs1.id and vs1.subject_name=#{item.deptname}),
			(SELECT truncate(sum(af2.money),2) from financial_flow af2,vip_student vs1 
			where af2.ACCOUNT_NO IN ('XFSR','XFBK') and DATE_FORMAT(af2.create_date,'%Y-%m')=concat(#{item.year},'-02') and af2.stu_id=vs1.id and vs1.subject_name=#{item.deptname}),
			(SELECT truncate(sum(af2.money),2) from financial_flow af2,vip_student vs1 
			where af2.ACCOUNT_NO IN ('XFSR','XFBK') and DATE_FORMAT(af2.create_date,'%Y-%m')=concat(#{item.year},'-03') and af2.stu_id=vs1.id and vs1.subject_name=#{item.deptname}),
			(SELECT truncate(sum(af2.money),2) from financial_flow af2,vip_student vs1 
			where af2.ACCOUNT_NO IN ('XFSR','XFBK') and DATE_FORMAT(af2.create_date,'%Y-%m')=concat(#{item.year},'-04') and af2.stu_id=vs1.id and vs1.subject_name=#{item.deptname}),
			(SELECT truncate(sum(af2.money),2) from financial_flow af2,vip_student vs1 
			where af2.ACCOUNT_NO IN ('XFSR','XFBK') and DATE_FORMAT(af2.create_date,'%Y-%m')=concat(#{item.year},'-05') and af2.stu_id=vs1.id and vs1.subject_name=#{item.deptname}),
			(SELECT truncate(sum(af2.money),2) from financial_flow af2,vip_student vs1 
			where af2.ACCOUNT_NO IN ('XFSR','XFBK') and DATE_FORMAT(af2.create_date,'%Y-%m')=concat(#{item.year},'-06') and af2.stu_id=vs1.id and vs1.subject_name=#{item.deptname}),
			(SELECT truncate(sum(af2.money),2) from financial_flow af2,vip_student vs1 
			where af2.ACCOUNT_NO IN ('XFSR','XFBK') and DATE_FORMAT(af2.create_date,'%Y-%m')=concat(#{item.year},'-07') and af2.stu_id=vs1.id and vs1.subject_name=#{item.deptname}), 
			(SELECT truncate(sum(af2.money),2) from financial_flow af2,vip_student vs1 
			where af2.ACCOUNT_NO IN ('XFSR','XFBK') and DATE_FORMAT(af2.create_date,'%Y-%m')=concat(#{item.year},'-08') and af2.stu_id=vs1.id and vs1.subject_name=#{item.deptname}), 
			(SELECT truncate(sum(af2.money),2) from financial_flow af2,vip_student vs1 
			where af2.ACCOUNT_NO IN ('XFSR','XFBK') and DATE_FORMAT(af2.create_date,'%Y-%m')=concat(#{item.year},'-09') and af2.stu_id=vs1.id and vs1.subject_name=#{item.deptname}),
			(SELECT truncate(sum(af2.money),2) from financial_flow af2,vip_student vs1 
			where af2.ACCOUNT_NO IN ('XFSR','XFBK') and DATE_FORMAT(af2.create_date,'%Y-%m')=concat(#{item.year},'-10') and af2.stu_id=vs1.id and vs1.subject_name=#{item.deptname}),
			(SELECT truncate(sum(af2.money),2) from financial_flow af2,vip_student vs1 
			where af2.ACCOUNT_NO IN ('XFSR','XFBK') and DATE_FORMAT(af2.create_date,'%Y-%m')=concat(#{item.year},'-11') and af2.stu_id=vs1.id and vs1.subject_name=#{item.deptname}),
			(SELECT truncate(sum(af2.money),2) from financial_flow af2,vip_student vs1 
			where af2.ACCOUNT_NO IN ('XFSR','XFBK') and DATE_FORMAT(af2.create_date,'%Y-%m')=concat(#{item.year},'-12') and af2.stu_id=vs1.id and vs1.subject_name=#{item.deptname}),
			#{item.deptname},
			#{item.classtype},
			#{item.year})	
		</foreach >
	</insert>
	
			<insert id="timedupdatecostprofitrs" parameterType="com.dongnao.workbench.common.bean.ReportQuerycondition">
update cost_profit_temporary set j_oct=(select IFNULL(sum1.num1,0) -IFNULL(sum2.num2,0) from 
 (SELECT truncate(sum(af2.money),2) as num1 from financial_flow af2,vip_student vs1 
	where af2.ACCOUNT_NO IN ('XFSR','XFBK') and DATE_FORMAT(af2.create_date,'%Y-%m')=concat(#{year,jdbcType=VARCHAR},'-10') and af2.stu_id=vs1.id and vs1.subject_name=#{deptname,jdbcType=VARCHAR}) sum1 ,
 (SELECT truncate(sum(af2.money),2) as num2 from financial_flow af2,vip_student vs1 
			where af2.ACCOUNT_NO IN ('XFTK') and DATE_FORMAT(af2.create_date,'%Y-%m')=concat(#{year,jdbcType=VARCHAR},'-10') and af2.stu_id=vs1.id and vs1.subject_name=#{deptname,jdbcType=VARCHAR})sum2),
j_nov=(select IFNULL(sum1.num1,0) -IFNULL(sum2.num2,0) from 
 (SELECT truncate(sum(af2.money),2) as num1 from financial_flow af2,vip_student vs1 
	where af2.ACCOUNT_NO IN ('XFSR','XFBK') and DATE_FORMAT(af2.create_date,'%Y-%m')=concat(#{year,jdbcType=VARCHAR},'-11') and af2.stu_id=vs1.id and vs1.subject_name=#{deptname,jdbcType=VARCHAR}) sum1 ,
 (SELECT truncate(sum(af2.money),2) as num2 from financial_flow af2,vip_student vs1 
			where af2.ACCOUNT_NO IN ('XFTK') and DATE_FORMAT(af2.create_date,'%Y-%m')=concat(#{year,jdbcType=VARCHAR},'-11') and af2.stu_id=vs1.id and vs1.subject_name=#{deptname,jdbcType=VARCHAR})sum2),
j_dec=(select IFNULL(sum1.num1,0) -IFNULL(sum2.num2,0) from 
 (SELECT truncate(sum(af2.money),2) as num1 from financial_flow af2,vip_student vs1 
	where af2.ACCOUNT_NO IN ('XFSR','XFBK') and DATE_FORMAT(af2.create_date,'%Y-%m')=concat(#{year,jdbcType=VARCHAR},'-12') and af2.stu_id=vs1.id and vs1.subject_name=#{deptname,jdbcType=VARCHAR}) sum1 ,
 (SELECT truncate(sum(af2.money),2) as num2 from financial_flow af2,vip_student vs1 
			where af2.ACCOUNT_NO IN ('XFTK') and DATE_FORMAT(af2.create_date,'%Y-%m')=concat(#{year,jdbcType=VARCHAR},'-12') and af2.stu_id=vs1.id and vs1.subject_name=#{deptname,jdbcType=VARCHAR})sum2)
where j_year=#{year,jdbcType=VARCHAR} and subname=#{deptname,jdbcType=VARCHAR} and classtype=#{classtype,jdbcType=VARCHAR}
	</insert>
	
	
	<insert id="timedupdatecostprofitcs" parameterType="com.dongnao.workbench.common.bean.ReportQuerycondition">
	update cost_profit_temporary set j_oct=(SELECT truncate(sum(af2.money),2) from financial_flow af2 
			where af2.ACCOUNT_NO IN ('GZZC','SBKK') and DATE_FORMAT(af2.create_date,'%Y-%m')=concat(#{year,jdbcType=VARCHAR},'-10') and af2.d_name=#{deptname,jdbcType=VARCHAR}),
j_nov=(SELECT truncate(sum(af2.money),2) from financial_flow af2 
			where af2.ACCOUNT_NO IN ('GZZC','SBKK') and DATE_FORMAT(af2.create_date,'%Y-%m')=concat(#{year,jdbcType=VARCHAR},'-11') and af2.d_name=#{deptname,jdbcType=VARCHAR}),
j_dec=(SELECT truncate(sum(af2.money),2) from financial_flow af2 
			where af2.ACCOUNT_NO IN ('GZZC','SBKK') and DATE_FORMAT(af2.create_date,'%Y-%m')=concat(#{year,jdbcType=VARCHAR},'-12') and af2.d_name=#{deptname,jdbcType=VARCHAR})
where j_year=#{year,jdbcType=VARCHAR} and subname=#{deptname,jdbcType=VARCHAR} and classtype=#{classtype,jdbcType=VARCHAR}
	</insert>
	
	<insert id="timedupdatecostprofitc" parameterType="java.util.List">
insert into cost_profit_temporary (j_jan,j_feb,j_mar,j_apr,j_may,j_jun,j_jul,j_aug,j_sep,j_oct,j_nov,j_dec,subname,classType,j_year)
values
 <foreach collection ="list" item="item" index= "index" separator =",">
((SELECT truncate(sum(af2.money),2) from financial_flow af2
			where af2.ACCOUNT_NO IN ('XFTK','YGJK','GZZC','XFTJ','CCFY','DLJZ','YGFL','CF','BGCDZJ','TJHD','YJ','YGBX','WZCG','QT','ZDFY') and DATE_FORMAT(af2.create_date,'%Y-%m')=concat(#{item.year},'-01') and af2.d_name=#{item.deptname}),
			(SELECT truncate(sum(af2.money),2) from financial_flow af2 
			where af2.ACCOUNT_NO IN ('XFTK','YGJK','GZZC','XFTJ','CCFY','DLJZ','YGFL','CF','BGCDZJ','TJHD','YJ','YGBX','WZCG','QT','ZDFY') and DATE_FORMAT(af2.create_date,'%Y-%m')=concat(#{item.year},'-02') and af2.d_name=#{item.deptname}),
			(SELECT truncate(sum(af2.money),2) from financial_flow af2 
			where af2.ACCOUNT_NO IN ('XFTK','YGJK','GZZC','XFTJ','CCFY','DLJZ','YGFL','CF','BGCDZJ','TJHD','YJ','YGBX','WZCG','QT','ZDFY') and DATE_FORMAT(af2.create_date,'%Y-%m')=concat(#{item.year},'-03') and af2.d_name=#{item.deptname}),
			(SELECT truncate(sum(af2.money),2) from financial_flow af2 
			where af2.ACCOUNT_NO IN ('XFTK','YGJK','GZZC','XFTJ','CCFY','DLJZ','YGFL','CF','BGCDZJ','TJHD','YJ','YGBX','WZCG','QT','ZDFY') and DATE_FORMAT(af2.create_date,'%Y-%m')=concat(#{item.year},'-04') and af2.d_name=#{item.deptname}),
			(SELECT truncate(sum(af2.money),2) from financial_flow af2 
			where af2.ACCOUNT_NO IN ('XFTK','YGJK','GZZC','XFTJ','CCFY','DLJZ','YGFL','CF','BGCDZJ','TJHD','YJ','YGBX','WZCG','QT','ZDFY') and DATE_FORMAT(af2.create_date,'%Y-%m')=concat(#{item.year},'-05') and af2.d_name=#{item.deptname}),
			(SELECT truncate(sum(af2.money),2) from financial_flow af2 
			where af2.ACCOUNT_NO IN ('XFTK','YGJK','GZZC','XFTJ','CCFY','DLJZ','YGFL','CF','BGCDZJ','TJHD','YJ','YGBX','WZCG','QT','ZDFY') and DATE_FORMAT(af2.create_date,'%Y-%m')=concat(#{item.year},'-06') and af2.d_name=#{item.deptname}),
			(SELECT truncate(sum(af2.money),2) from financial_flow af2 
			where af2.ACCOUNT_NO IN ('XFTK','YGJK','GZZC','XFTJ','CCFY','DLJZ','YGFL','CF','BGCDZJ','TJHD','YJ','YGBX','WZCG','QT','ZDFY') and DATE_FORMAT(af2.create_date,'%Y-%m')=concat(#{item.year},'-07') and af2.d_name=#{item.deptname}), 
			(SELECT truncate(sum(af2.money),2) from financial_flow af2 
			where af2.ACCOUNT_NO IN ('XFTK','YGJK','GZZC','XFTJ','CCFY','DLJZ','YGFL','CF','BGCDZJ','TJHD','YJ','YGBX','WZCG','QT','ZDFY') and DATE_FORMAT(af2.create_date,'%Y-%m')=concat(#{item.year},'-08') and af2.d_name=#{item.deptname}), 
			(SELECT truncate(sum(af2.money),2) from financial_flow af2 
			where af2.ACCOUNT_NO IN ('XFTK','YGJK','GZZC','XFTJ','CCFY','DLJZ','YGFL','CF','BGCDZJ','TJHD','YJ','YGBX','WZCG','QT','ZDFY') and DATE_FORMAT(af2.create_date,'%Y-%m')=concat(#{item.year},'-09') and af2.d_name=#{item.deptname}),
			(SELECT truncate(sum(af2.money),2) from financial_flow af2 
			where af2.ACCOUNT_NO IN ('XFTK','YGJK','GZZC','XFTJ','CCFY','DLJZ','YGFL','CF','BGCDZJ','TJHD','YJ','YGBX','WZCG','QT','ZDFY') and DATE_FORMAT(af2.create_date,'%Y-%m')=concat(#{item.year},'-10') and af2.d_name=#{item.deptname}),
			(SELECT truncate(sum(af2.money),2) from financial_flow af2 
			where af2.ACCOUNT_NO IN ('XFTK','YGJK','GZZC','XFTJ','CCFY','DLJZ','YGFL','CF','BGCDZJ','TJHD','YJ','YGBX','WZCG','QT','ZDFY') and DATE_FORMAT(af2.create_date,'%Y-%m')=concat(#{item.year},'-11') and af2.d_name=#{item.deptname}),
			(SELECT truncate(sum(af2.money),2) from financial_flow af2 
			where af2.ACCOUNT_NO IN ('XFTK','YGJK','GZZC','XFTJ','CCFY','DLJZ','YGFL','CF','BGCDZJ','TJHD','YJ','YGBX','WZCG','QT','ZDFY') and DATE_FORMAT(af2.create_date,'%Y-%m')=concat(#{item.year},'-12') and af2.d_name=#{item.deptname}),
			#{item.deptname},
			#{item.classtype},
			#{item.year})	
		</foreach >
	</insert>
	
	
	
	<update id="update" parameterType="com.dongnao.workbench.account.model.AccountFlow">
		update account_flow  set
<!-- 											ID= #{id,jdbcType=VARCHAR} -->
<!-- 											,account_id = #{accountId,jdbcType=VARCHAR} -->
<!-- 											,account_no = #{accountNo,jdbcType=VARCHAR} -->
<!-- 											,account_type = #{accountType,jdbcType=INTEGER} -->
<!-- 											,account_name = #{accountName,jdbcType=VARCHAR} -->
<!-- 											,create_date = #{createDate,jdbcType=TIMESTAMP} -->
<!-- 											,money = #{money,jdbcType=DOUBLE} -->
<!-- 											,note = #{note,jdbcType=VARCHAR} -->
											,is_account=#{isAccount,jdbcType=INTEGER}
							where id = #{id,jdbcType=VARCHAR}
	</update>
	
	<select id="countMoney" resultMap="MoneyResultMap" parameterType="com.dongnao.workbench.account.model.AccountFlow">
		select
		sum(case WHEN af.ACCOUNT_TYPE=1 THEN MONEY ELSE 0 END) AS LEND,
		sum(case WHEN af.ACCOUNT_TYPE=2 THEN MONEY ELSE 0 END) AS LOAN,
		sum(case WHEN af.ACCOUNT_TYPE=1 THEN MONEY ELSE 0 END)-SUM(CASE WHEN af.ACCOUNT_TYPE=2 THEN MONEY ELSE 0 END) AS TOTAL,
		sum(case WHEN af.ACCOUNT_NO='XFTK' THEN MONEY ELSE 0 END) AS XFTK
		from ACCOUNT_FLOW as af
		LEFT JOIN vip_student as v  ON	af.stu_id=v.id 
		where 1=1
		<if test="subjectName != null and '' != subjectName">  
			and v.subject_name = #{subjectName,jdbcType=VARCHAR}
		</if>
		<if test="accountName != null and '' != accountName">  
			and af.account_name like CONCAT('%',#{accountName,jdbcType=VARCHAR},'%')
		</if>
		<if test="accountNameInclude != null and '' != accountNameInclude">  
			and af.account_name in(SUBSTRING(#{accountNameInclude,jdbcType=VARCHAR} FROM 1 FOR 4),SUBSTRING(#{accountNameInclude,jdbcType=VARCHAR} FROM 6 FOR 4),SUBSTRING(#{accountNameInclude,jdbcType=VARCHAR} FROM 11 FOR 4))
		</if>
		<if test="accountNameExcept != null and '' != accountNameExcept">  
			and af.account_name not in (#{accountNameExcept,jdbcType=VARCHAR},'学费调减')
		</if>
		<if test="null != startDate and startDate != ''">
			<![CDATA[
			and DATE_FORMAT(af.create_date,'%Y-%m-%d') >= DATE_FORMAT(#{startDate,jdbcType=TIMESTAMP},'%Y-%m-%d')
			]]>
		</if>
		<if test="null != endDate and endDate != ''">
			<![CDATA[
				and DATE_FORMAT(af.create_date,'%Y-%m-%d') <= DATE_FORMAT(#{endDate,jdbcType=TIMESTAMP},'%Y-%m-%d')
			]]>
		</if>
	</select>
	
	<select id="countXF" resultMap="MoneyResultMap" parameterType="com.dongnao.workbench.account.model.AccountFlow">
		select
		sum(case WHEN af.ACCOUNT_NO='XFSR' and af.money>0 THEN af.MONEY ELSE 0 END) AS xfsr,
		sum(case WHEN af.ACCOUNT_NO='XFBK' and af.money>0 THEN af.MONEY ELSE 0 END) AS xfbk,
		sum(case WHEN af.ACCOUNT_NO='XFTK' and af.money>0 THEN af.MONEY ELSE 0 END) AS xftk,
		sum(case WHEN af.ACCOUNT_NO='XFTZ' and af.money>0 THEN af.MONEY ELSE 0 END) AS xftz,
		sum(case WHEN af.ACCOUNT_NO='XFTJ' and af.money>0 THEN af.MONEY ELSE 0 END) AS xftj,
		sum(case WHEN af.ACCOUNT_NO='QTSR' and af.money>0 THEN af.MONEY ELSE 0 END) AS qtsr,
		sum(case WHEN af.ACCOUNT_NO='QT' and af.money>0 THEN af.MONEY ELSE 0 END) AS qtzc,
		sum(case WHEN af.account_type='1' and af.money>0 THEN af.MONEY ELSE 0 END)-sum(case WHEN af.account_type='2' and af.money>0 THEN af.MONEY ELSE 0 END) AS profit,
		sum(case WHEN af.account_type='2' and af.money>0 THEN af.MONEY ELSE 0 END)-sum(case WHEN af.ACCOUNT_NO='XFTK' and af.money>0 THEN af.MONEY ELSE 0 END)AS pay
		from ACCOUNT_FLOW af
		LEFT JOIN vip_student as v  ON	af.stu_id=v.id 
		where 1=1
		<if test="createTime!=null and createTime!=''"> 
			AND DATE_FORMAT(create_date,'%Y%m') like CONCAT('%',#{createTime,jdbcType=VARCHAR},'%')
		</if>
		<if test="subjectName != null and '' != subjectName">  
			and v.subject_id = #{subjectName,jdbcType=VARCHAR}
		</if>
		<if test="accountName != null and '' != accountName">  
			and af.account_name like CONCAT('%',#{accountName,jdbcType=VARCHAR},'%')
		</if>
		<if test="accountNameInclude != null and '' != accountNameInclude">  
			and af.account_name in(SUBSTRING(#{accountNameInclude,jdbcType=VARCHAR} FROM 1 FOR 4),SUBSTRING(#{accountNameInclude,jdbcType=VARCHAR} FROM 6 FOR 4),SUBSTRING(#{accountNameInclude,jdbcType=VARCHAR} FROM 11 FOR 4))
		</if>
		<if test="accountNameExcept != null and '' != accountNameExcept">  
			and af.account_name not in (#{accountNameExcept,jdbcType=VARCHAR},'学费调减')
		</if>
		<if test="null != startDate and startDate != ''">
			<![CDATA[
			and DATE_FORMAT(af.create_date,'%Y-%m-%d') >= DATE_FORMAT(#{startDate,jdbcType=TIMESTAMP},'%Y-%m-%d')
			]]>
		</if>
		<if test="null != endDate and endDate != ''">
			<![CDATA[
				and DATE_FORMAT(af.create_date,'%Y-%m-%d') <= DATE_FORMAT(#{endDate,jdbcType=TIMESTAMP},'%Y-%m-%d')
			]]>
		</if>
	</select>
	
	<select id="getBarStatistic" resultMap="MoneyResultMap" parameterType="com.dongnao.workbench.account.model.AccountFlow">
		select 
			sum(case WHEN t.ACCOUNT_NO='XFSR' THEN MONEY ELSE 0 END) as xfsr,
			sum(case WHEN t.ACCOUNT_NO='XFBK' THEN MONEY ELSE 0 END) as xfbk,
			sum(case WHEN t.ACCOUNT_NO='XFTK' THEN MONEY ELSE 0 END) as xftk,
			f2.pay as pay
		from 
			(select af2.ACCOUNT_NO, af2.money from financial_flow af2,vip_student vs1 
				where af2.ACCOUNT_NO IN('XFSR','XFBK','XFTK')
			<if test="null!=createTime and ''!=createTime">
				and DATE_FORMAT(af2.create_date,'%Y%m') = DATE_FORMAT(#{createTime,jdbcType=VARCHAR},'%Y%m') 
			</if>
				and af2.stu_id = vs1.id  
			<if test="null!=subjectName and ''!=subjectName"> 
				and vs1.subject_name = #{subjectName,jdbcType=VARCHAR}
			</if>
			) t,
			(SELECT IFNULL(sum(af2.money),0) as pay from financial_flow af2 
				where af2.ACCOUNT_NO IN ('GZZC','SBKK') 
			<if test="null!=createTime and ''!=createTime">
				and DATE_FORMAT(af2.create_date,'%Y%m') = DATE_FORMAT(#{createTime,jdbcType=VARCHAR},'%Y%m') 
			</if>
			<if test="null!=subjectName and ''!=subjectName"> 
				and af2.d_name = #{subjectName,jdbcType=VARCHAR}
			</if>
			) f2
	</select>
	
	<select id="listByAccountName" resultMap="BaseResultMap" parameterType="java.lang.String">
		SELECT account_name ,sum(money)  as money
		  FROM account_flow 
		  where 1=1
		 	<if test="_parameter!=null and _parameter!=''"> 
				AND DATE_FORMAT(create_date,'%Y%m') like CONCAT('%',#{month,jdbcType=VARCHAR},'%')
			</if>
		  group by account_name;
	</select>
	
	<select id="getRecentlyThirtyDayData" resultMap="ThirtyDayResultMap" parameterType="java.lang.String">
		SELECT lefttable.date,IFNULL(righttable.m,'0') as money
FROM 
		(SELECT date_sub(CURDATE(),interval @i:=@i+1 day) as date 
				from ( select 1 union all select 1 union all select 1 union all select 1 union all select 1 union all select 1 union all select 1 union all
							 select 1 union all select 1 union all select 1 union all select 1 union all select 1 union all select 1 union all select 1 union all  
							 select 1 union all select 1 union all select 1 union all select 1 union all select 1 union all select 1 union all select 1 union all 
							 select 1 union all select 1 union all select 1 union all select 1 union all select 1 union all select 1 union all select 1 union all 
							 select 1 union all select 1) as tmp,(select @i:= -1) t) 
		as lefttable
LEFT JOIN 
		(SELECT truncate(sum(af2.money),2) as m,DATE_FORMAT(af2.create_date,'%Y-%m-%d') as gptime 
				from financial_flow af2,vip_student vs1 
				where af2.ACCOUNT_NO IN ('XFSR','XFBK') and DATE(af2.create_date)>=DATE_SUB(CURDATE(), INTERVAL 29 DAY) and af2.stu_id=vs1.id  <if test="_parameter!=null and _parameter!=''"> and vs1.subject_name=#{subjectName,jdbcType=VARCHAR}</if>GROUP BY gptime)
		 as righttable
ON 
lefttable.date=righttable.gptime

	</select>
	
	
	<select id="getRecentlyThreeMonthData" resultMap="ThreeMonthResultMap" parameterType="com.dongnao.workbench.school.model.RecentlyThreeMonthData">
SELECT DATE_FORMAT(lefttable.date,'%Y-%m') as yearMonth,lefttable.date,IFNULL(righttable.m,'0') as money
FROM 
		(SELECT ADDDATE(y.first, x.d - 1) as date
FROM
(SELECT 1 AS d UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL
SELECT 8 UNION ALL SELECT 9 UNION ALL SELECT 10 UNION ALL SELECT 11 UNION ALL SELECT 12 UNION ALL SELECT 13 UNION ALL SELECT 14 UNION ALL
SELECT 15 UNION ALL SELECT 16 UNION ALL SELECT 17 UNION ALL SELECT 18 UNION ALL SELECT 19 UNION ALL SELECT 20 UNION ALL SELECT 21 UNION ALL
SELECT 22 UNION ALL SELECT 23 UNION ALL SELECT 24 UNION ALL SELECT 25 UNION ALL SELECT 26 UNION ALL SELECT 27 UNION ALL SELECT 28 UNION ALL
SELECT 29 UNION ALL SELECT 30 UNION ALL SELECT 31) x,
(SELECT CONCAT(#{yearMonth,jdbcType=VARCHAR},'-01') as FIRST, DAY(LAST_DAY(str_to_date(#{yearMonth,jdbcType=VARCHAR},'%Y-%m'))) AS last) y
WHERE <![CDATA[x.d <= y.last and ADDDATE(y.first, x.d - 1)<=CURDATE()]]>) as lefttable
LEFT JOIN 
		(SELECT truncate(sum(af2.money),2) as m,DATE_FORMAT(af2.create_date,'%Y-%m-%d') as gptime 
				from financial_flow af2,vip_student vs1 
				where af2.ACCOUNT_NO IN ('XFSR','XFBK') and DATE_FORMAT(af2.create_date,'%Y-%c')=#{yearMonth,jdbcType=VARCHAR} and af2.stu_id=vs1.id <if test="subjectName!=null and subjectName!=''"> and vs1.subject_name=#{subjectName,jdbcType=VARCHAR}</if> GROUP BY gptime)
		 as righttable
ON 
DATE_FORMAT(lefttable.date,'%Y-%m-%d')=righttable.gptime
	</select>
	
	<select id="listCostByCondition" resultMap="BaseResultMap"  parameterType="com.dongnao.workbench.account.model.AccountFlow">
		SELECT * FROM `account_flow` 
		WHERE account_type= '2'
		AND account_name not in ('学费退款','学费调减')
		<if test="null != propsMap.startDate and propsMap.startDate != ''">
			<![CDATA[
			and DATE_FORMAT(create_date,'%Y-%m-%d') >= DATE_FORMAT(#{propsMap.startDate,jdbcType=TIMESTAMP},'%Y-%m-%d')
			]]>
		</if>
		<if test="null != propsMap.endDate and propsMap.endDate != ''">
			<![CDATA[
			and DATE_FORMAT(create_date,'%Y-%m-%d') <= DATE_FORMAT(#{propsMap.endDate,jdbcType=TIMESTAMP},'%Y-%m-%d')
			]]>
		</if>
	</select>
</mapper>